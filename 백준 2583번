import sys
input = sys.stdin.readline
from collections import deque

m, n, k = map(int, input().split())
graph =[[0] * n for _ in range(m)]

for _ in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    for i in range(y1, y2):
        for j in range(x1, x2):
            graph[i][j] = '@'

def bfs(x, y):
    queue = deque([[x, y]])
    graph[x][y] = 1
    area = 1
    dx = [1, -1, 0, 0]
    dy = [0, 0, 1, -1]

    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if 0 <= nx < m and 0 <= ny < n:
                if graph[nx][ny] == 0:
                    graph[nx][ny] = 1
                    area += 1
                    queue.append([nx, ny])

    return area

cnt = 0
area_list = []
for i in range(m):
    for j in range(n):
        if graph[i][j] == 0:
            cnt += 1
            area = bfs(i, j)
            area_list.append(area)
area_list.sort()

print(cnt)
for area in area_list:
    print(area, end=' ')

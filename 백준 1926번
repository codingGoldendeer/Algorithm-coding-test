from collections import deque

n, m = map(int, input().split())
portrait = []
for _ in range(n):
    portrait.append(list(map(int, input().split())))
visited = [[False] * m for _ in range(n)]

def bfs(x, y):
    global area
    queue = deque([[x, y]])
    visited[x][y] = True
    dx = [1, -1, 0, 0]
    dy = [0, 0, 1, -1]

    while queue:
        x, y = queue.popleft()

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if nx < 0 or ny < 0 or nx >= n or ny >= m:
                continue
            if portrait[nx][ny] == 1 and not visited[nx][ny]:
                portrait[nx][ny] = portrait[x][y] + 1
                visited[nx][ny] = True
                area += 1
                queue.append([nx, ny])

cnt = 0
area = 0
max_area = 0
for i in range(n):
    for j in range(m):
        if portrait[i][j] == 1 and not visited[i][j]:
            area = 1
            bfs(i, j)
            max_area = max(max_area, area)
            cnt += 1
            area = 0

print(cnt)
print(max_area)

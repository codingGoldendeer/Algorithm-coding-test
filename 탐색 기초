from collections import deque

n, m = map(int, input().split())
icebox = []
for _ in range(n):
    icebox.append(list(map(int, input())))
visited = [[False] * m for _ in range(n)]

def bfs(x, y):
    queue = deque([[x, y]])
    visited[x][y] = True
    dx = [1, -1, 0, 0]
    dy = [0, 0, 1, -1]

    while queue:
        x, y = queue.popleft()

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            # 다음 좌표가 아이스박스를 벗어 난다면 continue
            if nx < 0 or ny < 0 or nx >= n or ny >= m:
                continue
            # 다음 좌표가 방문 하지 않은 0이라면 queue에 추가하고 방문처리
            if icebox[nx][ny] == 0 and not visited[nx][ny]:
                queue.append([nx, ny])
                visited[nx][ny] = True

cnt = 0
for i in range(n):
    for j in range(m):
        if icebox[i][j] == 0 and not visited[i][j]:
            cnt += 1
            bfs(i, j)

print(cnt)

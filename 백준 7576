from collections import deque
import sys
input = sys.stdin.readline

m, n = map(int, input().split())
tomatoes = []
for _ in range(n):
    tomatoes.append(list(map(int, input().split())))

queue = deque([])
for i in range(n):
    for j in range(m):
        if tomatoes[i][j] == 1:
            queue.append([i, j])

def bfs():
    dx = [1, -1, 0, 0]
    dy = [0, 0, 1, -1]

    while queue:
        x, y = queue.popleft()

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if nx < 0 or ny < 0 or nx >= n or ny >= m:
                continue

            if tomatoes[nx][ny] == 0:
                tomatoes[nx][ny] = tomatoes[x][y] + 1
                queue.append([nx, ny])

bfs()

trigger = True
for i in range(n):
    for j in range(m):
        if tomatoes[i][j] == 0:
            trigger = False
            break

final_day = max(map(max, tomatoes)) - 1

if trigger == False:
    print(-1)
else:
    print(final_day)
